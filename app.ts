// + и - такого подхода:
// - : когда пишем свой интерфейс, который где-то потом доопределяем. Возможен ввод в заблуждение
// + : при использовании библиотеки. Необходимо будет доопределить тип.

interface User {
  name: string;
}

interface User {
  age: number;
}

const user: User = {
  name: "as",
  age: 12,
};




// Так с тайпом нельзя
// type User2 = {
//   name: string;
// }

// type User2 = {
//   age: number;
// }


//Тайп позволяет использовать простые (примитивные) типы, когда как интерфейс не позволяет заэкстендить (только объекты)
type ID = string | number;

interface ID2{
  ID: string | number;
}


//Выводы:
// type - всегда для примитивных типов (Intersaction, Union)
// interface - всегда для объектов (удобство) + имплементация классов;


